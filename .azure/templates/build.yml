stages:
  - stage: buildAndPush
    displayName: Build & Push Docker image to AWS ECR
    jobs:
      - job: buildAndPush
        displayName: Build & Push Docker image
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Build Docker image
            inputs:
              command: build
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              buildContext: "$(Build.SourcesDirectory)"
              repository: $(BACKEND_DOCKER_REPOSITORY_NAME)

          - task: ECRPushImage@1
            displayName: Push an image to AWS ECR
            inputs:
              awsCredentials: "AWS_ECR"
              regionName: $(AWS_REGION)
              imageSource: "imagename"
              sourceImageName: $(BACKEND_DOCKER_REPOSITORY_NAME)
              sourceImageTag: $(Build.BuildId)
              pushTag: latest
              repositoryName: $(BACKEND_DOCKER_REPOSITORY_NAME)

  - stage: deploy
    displayName: Deploy Image
    jobs:
      - job: deploy
        displayName: Deploy
        steps:
          # Update ECS Service to use new tag (latest)
          - task: AWSCLI@1
            displayName: "Deploy to Fargate (update service)"
            inputs:
              awsCredentials: "AWS_ECR"
              regionName: $(AWS_REGION)
              awsCommand: ecs
              awsSubCommand: "update-service"
              awsArguments: "--cluster foo --service bar-service --force-new-deployment"
              failOnStandardError: false
